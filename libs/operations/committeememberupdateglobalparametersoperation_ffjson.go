// Code generated by ffjson <https://github.com/pquerna/ffjson>. DO NOT EDIT.
// source: committeememberupdateglobalparametersoperation.go

package operations

import (
	"bytes"
	"encoding/json"
	"errors"
	"fmt"
	fflib "github.com/pquerna/ffjson/fflib/v1"
)

// MarshalJSON marshal bytes to json - template
func (j *ChainParameters) MarshalJSON() ([]byte, error) {
	var buf fflib.Buffer
	if j == nil {
		buf.WriteString("null")
		return buf.Bytes(), nil
	}
	err := j.MarshalJSONBuf(&buf)
	if err != nil {
		return nil, err
	}
	return buf.Bytes(), nil
}

// MarshalJSONBuf marshal buff to json - template
func (j *ChainParameters) MarshalJSONBuf(buf fflib.EncodingBuffer) error {
	if j == nil {
		buf.WriteString("null")
		return nil
	}
	var err error
	var obj []byte
	_ = obj
	_ = err
	if j.AllowNonMemberWhitelists {
		buf.WriteString(`{"allow_non_member_whitelists":true`)
	} else {
		buf.WriteString(`{"allow_non_member_whitelists":false`)
	}
	if j.CountNonMemberVotes {
		buf.WriteString(`,"count_non_member_votes":true`)
	} else {
		buf.WriteString(`,"count_non_member_votes":false`)
	}
	buf.WriteString(`,"extensions":`)

	{

		obj, err = j.Extensions.MarshalJSON()
		if err != nil {
			return err
		}
		buf.Write(obj)

	}
	/* Struct fall back. type=types.FeeSchedule kind=struct */
	buf.WriteString(`,"current_fees":`)
	err = buf.Encode(&j.CurrentFees)
	if err != nil {
		return err
	}
	buf.WriteString(`,"account_fee_scale_bitshifts":`)
	fflib.FormatBits2(buf, uint64(j.AccountFeeScaleBitshifts), 10, false)
	buf.WriteString(`,"block_interval":`)
	fflib.FormatBits2(buf, uint64(j.BlockInterval), 10, false)
	buf.WriteString(`,"maintenance_skip_slots":`)
	fflib.FormatBits2(buf, uint64(j.MaintenanceSkipSlots), 10, false)
	buf.WriteString(`,"max_authority_depth":`)
	fflib.FormatBits2(buf, uint64(j.MaxAuthorityDepth), 10, false)
	buf.WriteString(`,"maximum_asset_feed_publishers":`)
	fflib.FormatBits2(buf, uint64(j.MaximumAssetFeedPublishers), 10, false)
	buf.WriteString(`,"maximum_asset_whitelist_authorities":`)
	fflib.FormatBits2(buf, uint64(j.MaximumAssetWhitelistAuthorities), 10, false)
	buf.WriteString(`,"accounts_per_fee_scale":`)
	fflib.FormatBits2(buf, uint64(j.AccountsPerFeeScale), 10, false)
	buf.WriteString(`,"lifetime_referrer_percent_of_fee":`)
	fflib.FormatBits2(buf, uint64(j.LifetimeReferrerPercentOfFee), 10, false)
	buf.WriteString(`,"max_predicate_opcode":`)
	fflib.FormatBits2(buf, uint64(j.MaxPredicateOpcode), 10, false)
	buf.WriteString(`,"maximum_authority_membership":`)
	fflib.FormatBits2(buf, uint64(j.MaximumAuthorityMembership), 10, false)
	buf.WriteString(`,"maximum_committee_count":`)
	fflib.FormatBits2(buf, uint64(j.MaximumCommitteeCount), 10, false)
	buf.WriteString(`,"maximum_witness_count":`)
	fflib.FormatBits2(buf, uint64(j.MaximumWitnessCount), 10, false)
	buf.WriteString(`,"network_percent_of_fee":`)
	fflib.FormatBits2(buf, uint64(j.NetworkPercentOfFee), 10, false)
	buf.WriteString(`,"reserve_percent_of_fee":`)
	fflib.FormatBits2(buf, uint64(j.ReservePercentOfFee), 10, false)
	buf.WriteString(`,"cashback_vesting_period_seconds":`)
	fflib.FormatBits2(buf, uint64(j.CashbackVestingPeriodSeconds), 10, false)
	buf.WriteString(`,"committee_proposal_review_period":`)
	fflib.FormatBits2(buf, uint64(j.CommitteeProposalReviewPeriod), 10, false)
	buf.WriteString(`,"witness_pay_vesting_seconds":`)
	fflib.FormatBits2(buf, uint64(j.WitnessPayVestingSeconds), 10, false)
	buf.WriteString(`,"maximum_proposal_lifetime":`)
	fflib.FormatBits2(buf, uint64(j.MaximumProposalLifetime), 10, false)
	buf.WriteString(`,"maximum_time_until_expiration":`)
	fflib.FormatBits2(buf, uint64(j.MaximumTimeUntilExpiration), 10, false)
	buf.WriteString(`,"maximum_transaction_size":`)
	fflib.FormatBits2(buf, uint64(j.MaximumTransactionSize), 10, false)
	buf.WriteString(`,"maintenance_interval":`)
	fflib.FormatBits2(buf, uint64(j.MaintenanceInterval), 10, false)
	buf.WriteString(`,"maximum_block_size":`)
	fflib.FormatBits2(buf, uint64(j.MaximumBlockSize), 10, false)
	buf.WriteString(`,"cashback_vesting_threshold":`)
	fflib.FormatBits2(buf, uint64(j.CashbackVestingThreshold), 10, j.CashbackVestingThreshold < 0)
	buf.WriteString(`,"witness_pay_per_block":`)
	fflib.FormatBits2(buf, uint64(j.WitnessPayPerBlock), 10, j.WitnessPayPerBlock < 0)
	buf.WriteString(`,"worker_budget_per_day":`)
	fflib.FormatBits2(buf, uint64(j.WorkerBudgetPerDay), 10, j.WorkerBudgetPerDay < 0)
	buf.WriteString(`,"fee_liquidation_threshold":`)
	fflib.FormatBits2(buf, uint64(j.FeeLiquidationThreshold), 10, j.FeeLiquidationThreshold < 0)
	buf.WriteByte('}')
	return nil
}

const (
	ffjtChainParametersbase = iota
	ffjtChainParametersnosuchkey

	ffjtChainParametersAllowNonMemberWhitelists

	ffjtChainParametersCountNonMemberVotes

	ffjtChainParametersExtensions

	ffjtChainParametersCurrentFees

	ffjtChainParametersAccountFeeScaleBitshifts

	ffjtChainParametersBlockInterval

	ffjtChainParametersMaintenanceSkipSlots

	ffjtChainParametersMaxAuthorityDepth

	ffjtChainParametersMaximumAssetFeedPublishers

	ffjtChainParametersMaximumAssetWhitelistAuthorities

	ffjtChainParametersAccountsPerFeeScale

	ffjtChainParametersLifetimeReferrerPercentOfFee

	ffjtChainParametersMaxPredicateOpcode

	ffjtChainParametersMaximumAuthorityMembership

	ffjtChainParametersMaximumCommitteeCount

	ffjtChainParametersMaximumWitnessCount

	ffjtChainParametersNetworkPercentOfFee

	ffjtChainParametersReservePercentOfFee

	ffjtChainParametersCashbackVestingPeriodSeconds

	ffjtChainParametersCommitteeProposalReviewPeriod

	ffjtChainParametersWitnessPayVestingSeconds

	ffjtChainParametersMaximumProposalLifetime

	ffjtChainParametersMaximumTimeUntilExpiration

	ffjtChainParametersMaximumTransactionSize

	ffjtChainParametersMaintenanceInterval

	ffjtChainParametersMaximumBlockSize

	ffjtChainParametersCashbackVestingThreshold

	ffjtChainParametersWitnessPayPerBlock

	ffjtChainParametersWorkerBudgetPerDay

	ffjtChainParametersFeeLiquidationThreshold
)

var ffjKeyChainParametersAllowNonMemberWhitelists = []byte("allow_non_member_whitelists")

var ffjKeyChainParametersCountNonMemberVotes = []byte("count_non_member_votes")

var ffjKeyChainParametersExtensions = []byte("extensions")

var ffjKeyChainParametersCurrentFees = []byte("current_fees")

var ffjKeyChainParametersAccountFeeScaleBitshifts = []byte("account_fee_scale_bitshifts")

var ffjKeyChainParametersBlockInterval = []byte("block_interval")

var ffjKeyChainParametersMaintena