// Code generated by ffjson <https://github.com/pquerna/ffjson>. DO NOT EDIT.
// source: limitordercreateoperation.go

package operations

import (
	"bytes"
	"encoding/json"
	"errors"
	"fmt"
	fflib "github.com/pquerna/ffjson/fflib/v1"
)

// MarshalJSON marshal bytes to json - template
func (j *LimitOrderCreateOperation) MarshalJSON() ([]byte, error) {
	var buf fflib.Buffer
	if j == nil {
		buf.WriteString("null")
		return buf.Bytes(), nil
	}
	err := j.MarshalJSONBuf(&buf)
	if err != nil {
		return nil, err
	}
	return buf.Bytes(), nil
}

// MarshalJSONBuf marshal buff to json - template
func (j *LimitOrderCreateOperation) MarshalJSONBuf(buf fflib.EncodingBuffer) error {
	if j == nil {
		buf.WriteString("null")
		return nil
	}
	var err error
	var obj []byte
	_ = obj
	_ = err
	buf.WriteString(`{ "seller":`)

	{

		obj, err = j.Seller.MarshalJSON()
		if err != nil {
			return err
		}
		buf.Write(obj)

	}
	/* Struct fall back. type=types.AssetAmount kind=struct */
	buf.WriteString(`,"amount_to_sell":`)
	err = buf.Encode(&j.AmountToSell)
	if err != nil {
		return err
	}
	/* Struct fall back. type=types.AssetAmount kind=struct */
	buf.WriteString(`,"min_to_receive":`)
	err = buf.Encode(&j.MinToRec